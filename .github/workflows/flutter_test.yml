name: Flutter CI

on: [push, pull_request]

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test

  integration-tests:
    name: Run Integration Tests
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
              build-essential \
              file \
              apt-utils \
              libc6-i386 \
              lib32stdc++6 \
              lib32gcc1 \
              lib32ncurses5 \
              lib32z1 \
              curl \
              unzip \
              libqt5widgets5
          wget -q "https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip" -O cmdlinetools.zip
          unzip -q cmdlinetools.zip -d ${HOME}/cmdlinetools
          echo "${HOME}/cmdlinetools/cmdline-tools/bin" >> $GITHUB_PATH
          mkdir -p ${HOME}/.android && touch ${HOME}/.android/repositories.cfg
          yes | cmdline-tools/bin/sdkmanager --licenses
          cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3" "emulator" "system-images;android-29;default;x86"
          echo "no" | cmdline-tools/bin/avdmanager create avd --force --name test --device "pixel" --package "system-images;android-29;default;x86" --abi "x86" --tag "default"

      - name: Start Android Emulator
        run: |
          ${HOME}/cmdlinetools/cmdline-tools/bin/emulator -avd test -no-audio -no-boot-anim -no-window -accel off &
          sleep 30 # Wait for emulator to start

      - name: Wait for Emulator to finish booting
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Unlock Emulator Screen
        run: adb shell input keyevent 82

      - name: Run integration tests
        run: flutter test integration_test
